#!/bin/bash

VARS_FILE=vars.env
APP_INSTANCE_PATH=/domino-export/instance

if [[ ! -f $VARS_FILE ]]; then
    cat >$VARS_FILE <<EOL
SERVICE_PORT=5000
LOCAL_INSTANCE_PATH=\$PWD/instance
LOCAL_DATA_PATH=\$LOCAL_INSTANCE_PATH/data
LOCAL_LOGS_PATH=\$LOCAL_INSTANCE_PATH/logs
LOCAL_DOCKER_BUILD_TEMPLATE_PATH=\$LOCAL_INSTANCE_PATH/docker_templates
LOCAL_FLASK_CONFIG_FILE=\$LOCAL_INSTANCE_PATH/config.py
LOCAL_FLASK_LOGGING_FILE=\$LOCAL_LOGS_PATH/api.log
LOCAL_SQLALCHEMY_DATABASE_FILE=\$LOCAL_DATA_PATH/domino_exports.db
APP_INSTANCE_PATH=$APP_INSTANCE_PATH
FLASK_CONFIG_FILE=$APP_INSTANCE_PATH/config.py
FLASK_LOGGING_FILE=$APP_INSTANCE_PATH/logs/api.log
DOCKER_BUILD_TEMPLATE_PATH=$APP_INSTANCE_PATH/docker_templates
SQLALCHEMY_DATABASE_FILE=$APP_INSTANCE_PATH/data/domino_exports.db
ADDITIONAL_DOCKER_ARGS=""
EOL
fi

source $VARS_FILE

mkdir -p $LOCAL_INSTANCE_PATH $LOCAL_DATA_PATH $LOCAL_LOGS_PATH $LOCAL_DOCKER_BUILD_TEMPLATE_PATH

[[ -d $LOCAL_SQLALCHEMY_DATABASE_FILE ]] && rm -rf $LOCAL_SQLALCHEMY_DATABASE_FILE
[[ -d $LOCAL_FLASK_LOGGING_FILE ]] && rm -rf $LOCAL_FLASK_LOGGING_FILE

touch $LOCAL_FLASK_LOGGING_FILE $LOCAL_SQLALCHEMY_DATABASE_FILE

if [[ ! -f "$LOCAL_DOCKER_BUILD_TEMPLATE_PATH/Standard.Dockerfile" ]]; then
    echo "FROM {DOMINO_DOCKER_IMAGE}" > "$LOCAL_DOCKER_BUILD_TEMPLATE_PATH/Standard.Dockerfile"
fi
