import os
import json

ALLOW_SAME_PROJECT_EXPORTS = False

APP_INSTANCE_PATH = os.environ.get("APP_INSTANCE_PATH", "/domino-export/instance").strip()
FLASK_LOGGING_FILE = os.environ.get("FLASK_LOGGING_FILE", os.path.join(APP_INSTANCE_PATH, "logs", "api.log")).strip()
ENCRYPTION_KEY_FILE = os.environ.get("ENCRYPTION_KEY_FILE", os.path.join(APP_INSTANCE_PATH, "data", "encrypt.key")).strip()
SQLALCHEMY_DATABASE_FILE = os.environ.get("SQLALCHEMY_DATABASE_FILE", os.path.join(APP_INSTANCE_PATH, "data", "domino_exports.db")).strip()
SQLALCHEMY_DATABASE_URI = "sqlite:///{0}".format(SQLALCHEMY_DATABASE_FILE)
SQLALCHEMY_MAX_QUERY_ATTEMPTS = 10
SQLALCHEMY_MAX_QUERY_ATTEMPTS_WAIT_SECONDS = 1
DOCKER_BUILD_TEMPLATE_PATH = os.environ.get("DOCKER_BUILD_TEMPLATE_PATH", os.path.join(APP_INSTANCE_PATH, "docker_templates")).strip()

DOMINO_API_SERVER = "https://localhost"
DOMINO_API_SERVER_VERIFY_SSL = False
EXPORTS_PROJECT_FILES_S3_BUCKET = "s3://none"
EXPORTS_PROJECT_FILES_S3_PATH_FORMAT = "{S3_BUCKET}/projects/{EXPORT_GROUP_NAME}/{EXPORT_PROJECT_NAME}"
EXPORTS_PROJECT_FILES_S3_LATEST_FORMAT = "{EXPORTS_PROJECT_FILES_S3_PATH}/latest"
EXPORTS_PROJECT_FILES_S3_PRIOR_FORMAT = "{EXPORTS_PROJECT_FILES_S3_PATH}/prior"
EXPORTS_PROJECT_FILES_S3_SYNC_LOG_PATH_FORMAT = "{EXPORTS_PROJECT_FILES_S3_PATH}/sync-status.log"
EXPORTS_PROJECT_FILES_S3_SYNC_LOG_MAX_RECORDS = 10

# Define a function here that consumes a list of status log records and formats them for the EXPORTS_PROJECT_FILES_S3_SYNC_LOG_PATH_FORMAT file
EXPORTS_PROJECT_FILES_S3_SYNC_LOG_FORMATTER = lambda records: "[\n{0}\n]".format(",\n".join([json.dumps(record, default=str) for record in records]))
DOMINO_DOCKER_IMAGE_FORMAT = None
EXPORTS_DOCKER_REGISTRY = "localhost"
EXPORTS_DOCKER_REGISTRY_USERNAME = None
EXPORTS_DOCKER_REGISTRY_PASSWORD = None
EXPORTS_DOCKER_IMAGE_NAME_VERSION_FORMAT = "{DOCKER_REGISTRY}/{EXPORT_GROUP_NAME}/{EXPORT_PROJECT_NAME}:{DOMINO_COMPUTE_ENVIRONMENT_ID}-v{DOMINO_COMPUTE_ENVIRONMENT_REVISION}"
EXPORTS_DOCKER_IMAGE_NAME_LATEST_FORMAT = "{DOCKER_REGISTRY}/{EXPORT_GROUP_NAME}/{EXPORT_PROJECT_NAME}:latest"
JOBS_MAX_CONCURRENT_WORKERS = 20
JOB_TASK_TIMEOUT_IN_SECONDS = 7200
EXPORT_JOB_SCHEDULE_DEFAULT_FREQUENCY_SECONDS = 900
HEALTHCHECK_SCHEDULE_FREQUENCY_SECONDS = 15
HEALTHCHECK_TIMEOUT_IN_SECONDS = 5
SQLALCHEMY_ECHO = True
DATABASE_HISTORY_AGE_DAYS = 30
DATABASE_PRUNE_FREQUENCY_SECONDS = 86400
OPENAPI_YAML_TEMPLATE_FILE = "domino-export-spec.yaml"
API_STATUS_LOG_MAX_RECORDS = 10
EXPORTS_PROJECT_FILES_S3_TOP_LEVEL_LOG_FREQUENCY_SECONDS = 30
EXPORTS_PROJECT_FILES_S3_TOP_LEVEL_LOG_PATH_FORMAT = "{S3_BUCKET}/exports-status.log"

# Define a function here that consumes a list of status log records and formats them for the EXPORTS_PROJECT_FILES_S3_TOP_LEVEL_LOG_PATH_FORMAT file
EXPORTS_PROJECT_FILES_S3_TOP_LEVEL_LOG_FORMATTER = lambda records: "[\n{0}\n]".format(",\n".join([json.dumps(record, default=str) for record in records]))

EXPORTS_PROJECT_FILES_FORCE_RUN = False